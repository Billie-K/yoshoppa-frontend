export { ApolloClient, ApolloClientOptions, DefaultOptions, mergeOptions, } from 'apollo-upload-client/node_modules/@apollo/src/core/ApolloClient';
export { ObservableQuery, FetchMoreOptions, UpdateQueryOptions, applyNextFetchPolicy, } from 'apollo-upload-client/node_modules/@apollo/src/core/ObservableQuery';
export { QueryOptions, WatchQueryOptions, MutationOptions, SubscriptionOptions, FetchPolicy, WatchQueryFetchPolicy, ErrorPolicy, FetchMoreQueryOptions, SubscribeToMoreOptions, } from 'apollo-upload-client/node_modules/@apollo/src/core/watchQueryOptions';
export { NetworkStatus } from 'apollo-upload-client/node_modules/@apollo/src/core/networkStatus';
export * from 'apollo-upload-client/node_modules/@apollo/src/core/types';
export { Resolver, FragmentMatcher, } from 'apollo-upload-client/node_modules/@apollo/src/core/LocalState';
export { isApolloError, ApolloError } from 'apollo-upload-client/node_modules/@apollo/src/errors';
export { Cache, ApolloCache, Transaction, DataProxy, InMemoryCache, InMemoryCacheConfig, MissingFieldError, defaultDataIdFromObject, ReactiveVar, makeVar, TypePolicies, TypePolicy, FieldPolicy, FieldReadFunction, FieldMergeFunction, FieldFunctionOptions, PossibleTypesMap, } from 'apollo-upload-client/node_modules/@apollo/src/cache';
export * from 'apollo-upload-client/node_modules/@apollo/src/cache/inmemory/types';
export * from 'apollo-upload-client/node_modules/@apollo/src/link/core';
export * from 'apollo-upload-client/node_modules/@apollo/src/link/http';
export { fromError, toPromise, fromPromise, ServerError, throwServerError, } from 'apollo-upload-client/node_modules/@apollo/src/link/utils';
export { Observable, Observer, ObservableSubscription, Reference, isReference, makeReference, StoreObject, } from 'apollo-upload-client/node_modules/@apollo/src/utilities';
import { setVerbosity } from "ts-invariant";
export { setVerbosity as setLogVerbosity };
export { gql, resetCaches, disableFragmentWarnings, enableExperimentalFragmentVariables, disableExperimentalFragmentVariables, } from 'graphql-tag';
//# sourceMappingURL=index.d.ts.map